rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Test results
    match /testResults/{resultId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Invitations - users can read invitations they created
    match /invitations/{invitationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.inviterUid;
      allow write: if request.auth != null && request.auth.uid == resource.data.inviterUid;
      // Allow read without auth for invitation verification (with token validation in functions)
      allow read: if true;
    }
    
    // Anonymous feedback - no authentication required for submission
    match /anonymousFeedback/{feedbackId} {
      allow read: if false; // Only functions can read feedback
      allow create: if true; // Anyone can create feedback (validated by functions)
    }
    
    // Compatibility reports
    match /compatibilityReports/{reportId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.generatedBy ||
         exists(/databases/$(database)/documents/testResults/$(resource.data.result1_id)) &&
         get(/databases/$(database)/documents/testResults/$(resource.data.result1_id)).data.userId == request.auth.uid ||
         exists(/databases/$(database)/documents/testResults/$(resource.data.result2_id)) &&
         get(/databases/$(database)/documents/testResults/$(resource.data.result2_id)).data.userId == request.auth.uid);
      allow create: if request.auth != null;
    }
    
    // Test definitions (read-only)
    match /tests/{testId} {
      allow read: if true;
    }
  }
}